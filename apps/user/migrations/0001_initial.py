# Generated by Django 4.0.1 on 2022-01-22 04:25

import apps.user.models
import apps.user.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='생성된 날짜')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정된 날짜')),
                ('email', models.EmailField(error_messages={'unique': '이미 사용중인 이메일 입니다.'}, max_length=60, primary_key=True, serialize=False, unique=True, verbose_name='이메일')),
                ('name', models.CharField(max_length=10, validators=[apps.user.validators.NameValidator()], verbose_name='이름')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is staff')),
                ('introduction', models.TextField(null=True, verbose_name='자기소개')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_image', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.image', verbose_name='사용자 이미지')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '사용자',
                'db_table': 'user',
            },
            managers=[
                ('objects', apps.user.models.CustomUserManager()),
            ],
        ),
    ]
